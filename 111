#include <stdio.h>
#include <string.h>
#define   MAX_LEN  12
#define   STU_NUM 30
#define   COURSE_NUM 6

void  Menu();
void  ReadScore(long num[], char name[][MAX_LEN],float score[][COURSE_NUM], int n, int m);
void  AverSumofEveryCourse(float score[][COURSE_NUM], int n, int m);
void  AverSumofEveryStudent(float score[][COURSE_NUM], int n, int m,float  sum[STU_NUM], float aver[STU_NUM]);
int  Descending(float a, float b);
int  Ascending(float a, float b);
void  SwapFloat(float *x, float *y);
void  SwapLong(long *x, long *y);
void  SwapChar(char x[], char y[]);
void  SortbyScore(long num[], char name[][MAX_LEN],float score[][COURSE_NUM], float  sum[], float aver[],int n, int m, int (*compare)(float a, float b));
void  AsSortbyNum(long num[], char name[][MAX_LEN],float score[][COURSE_NUM], float  sum[], float aver[],int n, int m);
void  SortbyName(long num[], char name[][MAX_LEN],float score[][COURSE_NUM], float  sum[], float aver[],int n, int m);
void  SearchbyNum(long num[], char name[][MAX_LEN],float score[][COURSE_NUM], float  sum[], float aver[],int n, int m);
void  SearchbyName(long num[], char name[][MAX_LEN],float score[][COURSE_NUM], float  sum[], float aver[],int n, int m);
void  StatisticAnalysis(float score[][COURSE_NUM], int n, int m);
void  PrintScore(long num[], char name[][MAX_LEN],float score[][COURSE_NUM], float  sum[], float aver[],int n, int m) ;

int main()
{
    int n, ch=1, m;// 定义学生人数，选择变量ch，课程数，初始化ch为1进入循环
    long num[STU_NUM];//学号数组
    char name[STU_NUM][MAX_LEN];//姓名为字符数组
    float score[STU_NUM][COURSE_NUM], sum[STU_NUM], aver[STU_NUM];//用二维数组存储各科成绩，定义总分和平均分数组
    printf("Input student number(n<30):\n");
    scanf("%d", &n);//输入学生人数
    printf("Input course number(m<=6):\n");
    scanf("%d", &m);//输入课程门数
    Menu();
    while(ch!=0)//选择变量为0时退出程序
    {
        printf("Please Input your choice:\n");
        scanf("%d",&ch);//输入选择变量
        switch(ch)
        {
        case 1:
            printf("Input student's ID, name and score:\n");
            ReadScore(num, name, score, n, m);
            break;
        case 2:
            AverSumofEveryCourse(score, n, m);
            break;
        case 3:
            AverSumofEveryStudent(score, n, m, sum, aver);
            break;
        case 4:
            printf("Sort in descending order by score:\n");
            SortbyScore(num, name, score, sum, aver, n, m, Descending);
            break;
        case 5:
            printf("Sort in ascending order by score:\n");
            SortbyScore(num, name, score, sum, aver, n, m, Ascending);
            break;
        case 6:
            printf("Sort in ascending order by number:\n");
            AsSortbyNum(num, name, score, sum, aver, n, m);
            break;
        case 7:
            printf("Sort in dictionary order by name:\n");
            SortbyName(num, name, score, sum, aver, n, m);
            break;
        case 8:
            printf("Input the number you want to search:\n");
            SearchbyNum(num, name, score, sum, aver, n, m);
            break;
        case 9:
            printf("Input the name you want to search:\n");
            SearchbyName(num, name, score, sum, aver, n, m);
            break;
        case 10:
            StatisticAnalysis(score, n, m);
            break;
        case 11:
            PrintScore(num, name, score, sum, aver, n, m);
            break;
        case 0:
            break;
        default:
            printf("Input error!\n");
        }
    }
    return 0;
}

void   Menu()//函数功能：打印菜单
{
    printf("Management for Students' scores\n");
    printf("1.Input record\n");
    printf("2.Caculate total and average score of every course\n");
    printf("3.Caculate total and average score of every student\n");
    printf("4.Sort in descending order by score\n");
    printf("5.Sort in ascending order by score\n");
    printf("6.Sort in ascending order by number\n");
    printf("7.Sort in dictionary order by name\n");
    printf("8.Search by number\n");
    printf("9.Search by name\n");
    printf("10.Statistic analysis\n");
    printf("11.List record\n");
    printf("0.Exit\n");
}

void  ReadScore(long num[], char name[][MAX_LEN],float score[][COURSE_NUM], int n, int m)//函数功能：输入学生学号姓名成绩
{
    int i, j;
    for(i=0; i<n; i++)
    {
        scanf("%ld%s", &num[i], name[i]);
        for(j=0; j<m; j++)
        {
            scanf("%f", &score[i][j]);
        }
    }
    return ;
}

void AverSumofEveryCourse(float score[][COURSE_NUM], int n, int m)//计算各科总分和平均分
{
    int i, j;
    float sum=0;
    for(i=0; i<m; i++)
    {
        sum = 0;
        for(j=0; j<n; j++)
        {
            sum = sum + score[j][i];
        }
        printf("course %d:sum=%.0f,aver=%.0f\n", i+1, sum, sum/(float)n);
    }
    return ;
}

void AverSumofEveryStudent(float score[][COURSE_NUM], int n, int m,float  sum[STU_NUM], float aver[STU_NUM])//计算各位学生的总分和平均分
{
    int i, j;
    memset(sum, 0, sizeof(float)*STU_NUM);
    for(i=0; i<n; i++)
    {
        for(j=0; j<m; j++)
        {
            sum[i] = sum[i] + score[i][j];
        }
        aver[i] = sum[i] / (float)m;
    }
    for(i=0; i<n; i++)
    {
        printf("student %d:sum=%.0f,aver=%.0f\n", i+1, sum[i], aver[i]);
    }
    return ;
}

void  SwapFloat(float *x, float *y)//函数功能：交换两个浮点数
{
    float term;
    term = *x;
    *x = *y;
    *y = term;
    return ;
}

void  SwapLong(long *x, long *y)//函数功能：交换两个长整型数
{
    long term;
    term = *x;
    *x = *y;
    *y = term;
    return ;
}

void  SwapChar(char x[], char y[])//函数功能：交换两个字符串
{
    char c[MAX_LEN];
    strcpy(c, x);
    strcpy(x, y);
    strcpy(y, c);
    return ;
}

int   Descending(float a, float b)//按降序排列
{
    return a<b;
}

int   Ascending(float a, float b)//按升序排列
{
    return a>b;
}

void  SortbyScore(long num[], char name[][MAX_LEN],float score[][COURSE_NUM], float  sum[], float aver[],int n, int m, int (*compare)(float a, float b))//函数功能：按照顺序排列并打印成绩
{
    int i, j, t;
    for(i=0; i<n; i++)
    {
        for(j=0; j<n-1; j++)
        {
            if((*compare)(sum[j], sum[j+1]))
            {
                SwapLong(&num[j], &num[j+1]);
                SwapChar(name[j], name[j+1]);
                for(t=0; t<m; t++)
                {
                    SwapFloat(&score[j][t], &score[j+1][t]);
                }
                SwapFloat(&sum[j], &sum[j+1]);
                SwapFloat(&aver[j], &aver[j+1]);
            }
        }
    }
    for(i=0; i<n; i++)
    {
        printf("%ld\t%s\t", num[i], name[i]);
        for(j=0; j<m; j++)
        {
            printf("%.0f\t", score[i][j]);
        }
        printf("%.0f\t%.0f\n", sum[i], aver[i]);
    }
    return ;
}

void  AsSortbyNum(long num[], char name[][MAX_LEN],float score[][COURSE_NUM], float  sum[], float aver[],int n, int m)//函数功能：按照学号顺序打印成绩表
{
    int i, j, t;
    for(i=0; i<n; i++)
    {
        for(j=0; j<n-1; j++)
        {
            if(num[j] > num[j+1])
            {
                SwapLong(&num[j], &num[j+1]);
                SwapChar(name[j], name[j+1]);
                for(t=0; t<m; t++)
                {
                    SwapFloat(&score[j][t], &score[j+1][t]);
                }
                SwapFloat(&sum[j], &sum[j+1]);
                SwapFloat(&aver[j], &aver[j+1]);
            }
        }
    }
    for(i=0; i<n; i++)
    {
        printf("%ld\t%s\t", num[i], name[i]);
        for(j=0; j<m; j++)
        {
            printf("%.0f\t", score[i][j]);
        }
        printf("%.0f\t%.0f\n", sum[i], aver[i]);
    }
    return ;
}

void  SortbyName(long num[], char name[][MAX_LEN],float score[][COURSE_NUM], float  sum[], float aver[],int n, int m)//函数功能：按照姓名字典顺序排列并打印成绩
{
    int i, j, t;
    for(i=0; i<n; i++)
    {
        for(j=0; j<n-1; j++)
        {
            if(strcmp(name[j], name[j+1]) > 0)
            {
                SwapLong(&num[j], &num[j+1]);
                SwapChar(name[j], name[j+1]);
                for(t=0; t<m; t++)
                {
                    SwapFloat(&score[j][t], &score[j+1][t]);
                }
                SwapFloat(&sum[j], &sum[j+1]);
                SwapFloat(&aver[j], &aver[j+1]);
            }
        }
    }
    for(i=0; i<n; i++)
    {
        printf("%ld\t%s\t", num[i], name[i]);
        for(j=0; j<m; j++)
        {
            printf("%.0f\t", score[i][j]);
        }
        printf("%.0f\t%.0f\n", sum[i], aver[i]);
    }
    return ;
}

void  SearchbyNum(long num[], char name[][MAX_LEN],float score[][COURSE_NUM], float  sum[], float aver[],int n, int m)//函数功能：按学号查找学生成绩
{
    int i, j;
    long number;
    scanf("%ld", &number);
    for(i=0; i<n; i++)
    {
        if(number%1000 == num[i]%1000)
        {
            printf("%ld\t%s\t", num[i], name[i]);
            for(j=0; j<m; j++)
            {
                printf("%.0f\t", score[i][j]);
            }
            printf("%.0f\t%.0f\n", sum[i], aver[i]);
            return ;
        }
    }
    printf("Not found!\n");
    return ;
}

void  SearchbyName(long num[], char name[][MAX_LEN],float score[][COURSE_NUM], float  sum[], float aver[],int n, int m)//函数功能：按照姓名查找学生成绩
{
    int i, j;
    char ch[MAX_LEN];
    scanf("%s", ch);
    for(i=0; i<n; i++)
    {
        if(strcmp(ch, name[i]) == 0)
        {
            printf("%ld\t%s\t", num[i], name[i]);
            for(j=0; j<m; j++)
            {
                printf("%.0f\t", score[i][j]);
            }
            printf("%.0f\t%.0f\n", sum[i], aver[i]);
            return ;
        }
    }
    printf("Not found!\n");
    return ;
}

void  StatisticAnalysis(float score[][COURSE_NUM], int n, int m)//函数功能：统计学生成绩
{
    int i, j;
    int x[COURSE_NUM][6];
    memset(x, 0, sizeof(x));
    for(i=0; i<n; i++)
    {
        for(j=0; j<m; j++)
        {
            if(score[i][j] < 60)
            {
                x[j][0]++;
            }
            else if(score[i][j] < 70)
            {
                x[j][1]++;
            }
            else if(score[i][j] < 80)
            {
                x[j][2]++;
            }
            else if(score[i][j] < 90)
            {
                x[j][3]++;
            }
            else if(score[i][j] < 100)
            {
                x[j][4]++;
            }
            else
            {
                x[j][5]++;
            }
        }
    }
    for(j=0; j<m; j++)
    {
        printf("For course %d:\n", j+1);
        printf("<60\t%d\t%.2f%%\n", x[j][0], (float)x[j][0]*100/(float)n);
        printf("%d-%d\t%d\t%.2f%%\n", 60, 69, x[j][1], (float)x[j][1]*100/(float)n);
        printf("%d-%d\t%d\t%.2f%%\n", 70, 79, x[j][2], (float)x[j][2]*100/(float)n);
        printf("%d-%d\t%d\t%.2f%%\n", 80, 89, x[j][3], (float)x[j][3]*100/(float)n);
        printf("%d-%d\t%d\t%.2f%%\n", 90, 99, x[j][4], (float)x[j][4]*100/(float)n);
        printf("%d\t%d\t%.2f%%\n", 100, x[j][5], (float)x[j][5]*100/(float)n);
    }
    return ;
}

void  PrintScore(long num[], char name[][MAX_LEN],float score[][COURSE_NUM], float  sum[], float aver[],int n, int m)//函数功能：打印学生成绩
{
    int i, j, t;
    for(i=0; i<n; i++)
    {
        for(j=0; j<n-1; j++)
        {
            if(strcmp(name[j], name[j+1]) > 0)
            {
                SwapLong(&num[j], &num[j+1]);
                SwapChar(name[j], name[j+1]);
                for(t=0; t<m; t++)
                {
                    SwapFloat(&score[j][t], &score[j+1][t]);
                }
                SwapFloat(&sum[j], &sum[j+1]);
                SwapFloat(&aver[j], &aver[j+1]);
            }
        }
    }
    for(i=0; i<n; i++)
    {
        printf("%ld\t%s\t", num[i], name[i]);
        for(j=0; j<m; j++)
        {
            printf("%.0f\t", score[i][j]);
        }
        printf("%.0f\t%.0f\n", sum[i], aver[i]);
    }
    return ;
}
